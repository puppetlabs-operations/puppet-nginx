
upstream workers-<%= @name %> {
<% @workers.each do |worker| -%>
  server <%= worker %> max_fails=<%= @max_fails %> fail_timeout=<%= @fail_timeout %>s;
<% end -%>
<% unless @backups.empty? -%>
  # Use backups in the case a main server fails
<% @workers.each do |worker| -%>
  server <%= worker %> max_fails=<%= @max_fails %> fail_timeout=<%= @fail_timeout %>s backup;
<% end -%>
<% end -%>
}

<% unless @caches.nil? or @caches.empty? -%>
# Hack to add in additonal upstream for caching
upstream vcache_workers {
<% @caches.each do |cache| -%>
  server <%= cache %>;
<% end -%>
}
<% end -%>

server {

<%= scope.function_template(['nginx/vhost/_servername.conf.erb']) %>

<%= scope.function_template(['nginx/vhost/_listen.conf.erb']) %>

# Define empty root dir for LB
  root /usr/share/empty;

  client_max_body_size  128M;
  <% unless @locations.nil? or @locations.empty? -%>

  # Add placeholder for additional nginx locations
  <%= locations %>

<% end -%>
  location / {
<% if @rootlocation.nil? or @rootlocation.empty? -%>
<%= scope.function_template(['nginx/vhost/_loadbalancing.conf.erb']) %>
<% else %>
<%= @rootlocation %>
<% end -%>
  }

<% unless @magic.nil? or @magic.empty? -%>
  # Add in any addition template data. This is entirely arbitrary, so in the
  # words of Ben, this could be quite "jazzy"
  <%= magic %>
<% end -%>
}
